<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
			 xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
			 xmlns:devVm="clr-namespace:Grabacr07.Mukyutter.ViewModels.Development"
			 xmlns:behaviors="clr-namespace:Grabacr07.Mukyutter.Views.Behaviors"
			 xmlns:controls="clr-namespace:Grabacr07.Mukyutter.Views.Controls"
			 xmlns:twitter="clr-namespace:Grabacr07.Mukyutter.Views.Twitter"
			 x:Class="Grabacr07.Mukyutter.Views.Development.TestPage"
			 d:DesignHeight="1000"
			 d:DesignWidth="500"
			 SnapsToDevicePixels="True"
			 TextOptions.TextFormattingMode="Display"
			 mc:Ignorable="d">
	<UserControl.Resources>

	</UserControl.Resources>

	<UserControl.DataContext>
		<devVm:TestPageViewModel />
	</UserControl.DataContext>

	<StackPanel Margin="30,0">
		<TextBlock Text="Development Page"
				   Foreground="{DynamicResource ForegroundBrushKey}"
				   FontFamily="Segoe UI Light"
				   FontSize="36"
				   Margin="0,0,0,20" />
		<StackPanel Orientation="Horizontal"
					Margin="0,0,0,20">
			<TextBlock Text="Garbedge collection: "
					   Width="150" />
			<Button Width="100"
					Height="30"
					Content="GC" >
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<livet:LivetCallMethodAction MethodTarget="{Binding Mode=OneWay}" MethodName="GarbageCollection"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>
		</StackPanel>
		<StackPanel Orientation="Horizontal"
					Margin="0,0,0,20">
			<TextBlock Text="Change theme: "
					   Width="150" />
			<Button Width="100"
					Height="30"
					Content="Change"
					Command="{Binding Change}" />
		</StackPanel>
		<!--<RichTextBox AutoWordSelection="False"
					 Background="Transparent"
					 BorderThickness="0"
					 Foreground="{DynamicResource ActiveForegroundBrushKey}"
					 IsReadOnly="True"
					 CaretBrush="{DynamicResource ForegroundBrushKey}"
					 FontSize="13"
					 Margin="0,0,0,20">
			<controls:BindableFlowDocument Source="{Binding TextSource}" />
		</RichTextBox>-->
		<!--<ListView Margin="0,0,0,20">
			<ListView.Template>
				<ControlTemplate TargetType="{x:Type ListView}">
					<RichTextBox>
						<FlowDocument>
							<BlockUIContainer>
							</BlockUIContainer>
						</FlowDocument>
					</RichTextBox>
				</ControlTemplate>
			</ListView.Template>
		</ListView>-->

		<StackPanel Orientation="Horizontal"
					Margin="0,0,0,20">
			<TextBlock Text="Save account settings: "
					   Width="150" />
			<Button Width="100"
					Height="30"
					Content="Save"
					Command="{Binding SaveAccounts}" />
		</StackPanel>

		<StackPanel Orientation="Horizontal"
					Margin="0,0,0,20">
			<TextBlock Text="Get home timeline: "
					   Width="150" />
			<Button Width="100"
					Height="30"
					Content="Get statuses"
					Command="{Binding GetStatuses}" />
		</StackPanel>

		<StackPanel Orientation="Horizontal"
					Margin="0,0,0,20">
			<TextBlock Text="Start User streams: "
					   Width="150" />
			<Button Width="100"
					Height="30"
					Content="User streams"
					Command="{Binding Streaming}" />
		</StackPanel>

		<StackPanel Orientation="Horizontal"
					Margin="0,0,0,20">
			<TextBlock Text="Json monitor: "
					   Width="150" />
			<Button Width="100"
					Height="30"
					Content="Export"
					Command="{Binding ExportJson}" />
			<TextBlock Text="  " />
			<Button Width="100"
					Height="30"
					Content="Import"
					Command="{Binding ImportJson}" />
		</StackPanel>

		<Grid Margin="0,0,0,20">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="150"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition />
				<RowDefinition />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
				<TextBlock Text="Update (status, media):" Height="15"  />
				<controls:PromptTextBox Grid.Row="0" Grid.Column="1" Margin="1,2" Prompt="Status" Text="{Binding Text}" />
				<controls:PromptTextBox Grid.Row="1" Grid.Column="1" Margin="1,2" Prompt="Media path" Text="{Binding MediaPath}" />
				<Button Grid.Row="2" Grid.Column="1" Width="100" 
					Height="30"
						Content="Update" HorizontalAlignment="Left" >
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<ei:CallMethodAction TargetObject="{Binding Mode=OneWay}" MethodName="UploadPicture"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>
		</Grid>


		<Grid Margin="0,0,0,20"
			  HorizontalAlignment="Left">
			<Grid.Effect>
				<DropShadowEffect Color="{DynamicResource AccentColorKey}"
								  ShadowDepth="0" />
			</Grid.Effect>
			<Grid.RowDefinitions>
				<RowDefinition Height="12" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<ed:RegularPolygon Fill="{DynamicResource BackgroundBrushKey}"
							   InnerRadius="1"
							   PointCount="3"
							   Stretch="Fill"
							   Width="12"
							   Margin="11,0,0,0"
							   StrokeThickness="0"
							   HorizontalAlignment="Left" />

			<StackPanel Orientation="Horizontal"
						Grid.Row="1">
				<StackPanel.Resources>
					<ResourceDictionary>
						<Style TargetType="{x:Type Button}">
							<Setter Property="ToolTipService.Placement"
									Value="Bottom" />
							<Setter Property="FocusVisualStyle"
									Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border x:Name="border"
												Width="32"
												Background="{DynamicResource BackgroundBrushKey}"
												SnapsToDevicePixels="true">
											<ContentPresenter x:Name="contentPresenter"
															  Margin="3,4"
															  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
															  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter TargetName="border"
														Property="Background"
														Value="{DynamicResource ActiveBackgroundBrushKey}" />
												<Setter Property="BorderBrush"
														Value="{DynamicResource ActiveBorderBrushKey}" />
											</Trigger>
											<Trigger Property="IsPressed"
													 Value="True">
												<Setter TargetName="border"
														Property="Background"
														Value="{DynamicResource AccentBrushKey}" />
												<Setter Property="BorderBrush"
														Value="{DynamicResource ActiveBorderBrushKey}" />
											</Trigger>
											<Trigger Property="IsEnabled"
													 Value="False">
												<Setter TargetName="contentPresenter"
														Property="Opacity"
														Value="0.5" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ResourceDictionary>
				</StackPanel.Resources>
				<!--<Button ToolTip="このツイートに返信">
					<twitter:TwitterIcon Type="Reply" />
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<ei:CallMethodAction TargetObject="{Binding}"
												 MethodName="Reply" />
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>-->

				<Button ToolTip="このツイートを引用 (非公式 RT)"
						Visibility="{Binding CanRetweet, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
					<twitter:TwitterIcon Type="Quotation" />
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>

				<Button ToolTip="リツイート"
						Visibility="{Binding CanRetweet, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
					<twitter:TwitterIcon Type="Retweet" />
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>

				<Button ToolTip="お気に入りに登録"
						Visibility="{Binding CanFavorite, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
					<twitter:TwitterIcon Type="Favorite" />
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>

				<Button ToolTip="お気に入りに登録してリツイート"
						Visibility="{Binding CanFavAndRetweet, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
					<twitter:TwitterIcon Type="FavAndRetweet" />
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>

				<Button ToolTip="ツイートを削除"
						Visibility="{Binding CanDelete, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
					<twitter:TwitterIcon Type="Delete" />
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>
			</StackPanel>
		</Grid>
	</StackPanel>
</UserControl>
