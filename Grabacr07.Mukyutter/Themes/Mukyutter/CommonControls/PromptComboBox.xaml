<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:controls="clr-namespace:Grabacr07.Mukyutter.Views.Controls">

	<Style TargetType="{x:Type controls:PromptComboBox}">
		<Setter Property="Background"
				Value="{DynamicResource SemiactiveBackgroundBrushKey}" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource SemiactiveBorderBrushKey}" />
		<Setter Property="Foreground"
				Value="{DynamicResource ActiveForegroundBrushKey}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Padding"
				Value="1" />
		<Setter Property="Prompt"
				Value="プロンプト" />
		<Setter Property="PromptBrush"
				Value="{DynamicResource InactiveForegroundBrushKey}" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="FocusVisualStyle"
				Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ComboBoxItem}">
					<Setter Property="SnapsToDevicePixels"
							Value="true" />
					<Setter Property="OverridesDefaultStyle"
							Value="true" />
					<Setter Property="Background"
							Value="Transparent" />
					<Setter Property="FocusVisualStyle"
							Value="{x:Null}" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ComboBoxItem}">
								<Border CornerRadius="0"
										Padding="2"
										Background="{TemplateBinding Background}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
									<ContentPresenter />
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsHighlighted"
											 Value="True">
										<Setter Property="Background"
												Value="{DynamicResource HighlightBackgroundBrushKey}" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:PromptComboBox}">
					<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto"
													  MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
								</Grid.ColumnDefinitions>
								<Border Margin="1"
										x:Name="prompt"
										Visibility="Hidden">
									<TextBlock x:Name="promptText"
											   Text="{TemplateBinding Prompt}"
											   Foreground="{TemplateBinding PromptBrush}"
											   Margin="{TemplateBinding Padding}"
											   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											   TextOptions.TextFormattingMode="Display" />
								</Border>

								<ToggleButton x:Name="toggleButton"
											  Grid.ColumnSpan="2"
											  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
											  Foreground="{DynamicResource InactiveForegroundBrushKey}"
											  OverridesDefaultStyle="True"
											  IsTabStop="False"
											  Focusable="False"
											  ClickMode="Press">
									<ToggleButton.Template>
										<ControlTemplate TargetType="{x:Type ToggleButton}">
											<Border Background="Transparent">
												<Border x:Name="border"
														Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
														HorizontalAlignment="Right"
														Background="{TemplateBinding Background}"
														BorderBrush="{TemplateBinding BorderBrush}"
														BorderThickness="{TemplateBinding BorderThickness}">
													<Path Data="M 0.0,0.0 L 3.5,4.0 7.0,0.0 z"
														  Fill="{TemplateBinding Foreground}"
														  HorizontalAlignment="Center"
														  VerticalAlignment="Center" />
												</Border>
											</Border>
										</ControlTemplate>
									</ToggleButton.Template>
								</ToggleButton>

								<ContentPresenter x:Name="ContentSite"
												  Content="{TemplateBinding SelectionBoxItem}"
												  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
												  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  IsHitTestVisible="False"
												  Margin="2" />

								<TextBox x:Name="PART_EditableTextBox"
										 Text="{Binding EditableText, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:PromptComboBox}}, UpdateSourceTrigger=PropertyChanged}"
										 Foreground="{TemplateBinding Foreground}"
										 Margin="{TemplateBinding Padding}"
										 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										 CaretBrush="{DynamicResource ForegroundBrushKey}"
										 TextOptions.TextFormattingMode="Display"
										 FocusVisualStyle="{x:Null}">
									<TextBox.Template>
										<ControlTemplate TargetType="{x:Type TextBox}">
											<ScrollViewer x:Name="PART_ContentHost"
														  HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
														  VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
														  Margin="1" />
										</ControlTemplate>
									</TextBox.Template>
								</TextBox>
							</Grid>
						</Border>

						<Popup x:Name="PART_Popup"
							   MinWidth="{TemplateBinding ActualWidth}"
							   IsOpen="{TemplateBinding IsDropDownOpen}"
							   AllowsTransparency="True"
							   PopupAnimation="Slide"
							   Focusable="False"
							   Placement="Bottom"
							   VerticalOffset="2"
							   FocusVisualStyle="{x:Null}">
							<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="dropdown"
										Background="{DynamicResource BackgroundBrushKey}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="1">
									<ScrollViewer VerticalScrollBarVisibility="Auto">
										<StackPanel IsItemsHost="True"
													KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Border>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocusWithin"
										   Value="False" />
								<Condition Property="Text"
										   Value="" />
							</MultiTrigger.Conditions>
							<Setter TargetName="prompt"
									Property="Visibility"
									Value="Visible" />
						</MultiTrigger>
						<Trigger Property="IsEditable"
								 Value="False">
							<Setter TargetName="PART_EditableTextBox"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems"
								 Value="false">
							<Setter TargetName="dropdown"
									Property="MinHeight"
									Value="100" />
						</Trigger>
						<Trigger Property="IsGrouping"
								 Value="true">
							<Setter Property="ScrollViewer.CanContentScroll"
									Value="false" />
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter Property="Foreground"
									TargetName="toggleButton"
									Value="{DynamicResource AccentBrushKey}" />
							<Setter Property="BorderBrush"
									TargetName="toggleButton"
									Value="{DynamicResource AccentBrushKey}" />
							<Setter Property="Background"
									TargetName="toggleButton"
									Value="{DynamicResource BackgroundBrushKey}" />
							<Setter TargetName="border"
									Property="Background"
									Value="{DynamicResource ActiveBackgroundBrushKey}" />
							<Setter TargetName="promptText"
									Property="Foreground"
									Value="{DynamicResource ForegroundBrushKey}" />
						</Trigger>
						<Trigger SourceName="PART_EditableTextBox"
								 Property="IsKeyboardFocusWithin"
								 Value="True">
							<Setter TargetName="border"
									Property="Background"
									Value="{DynamicResource ActiveBackgroundBrushKey}" />
						</Trigger>
						<Trigger SourceName="PART_Popup"
								 Property="IsOpen"
								 Value="True">
							<Setter Property="Background"
									TargetName="toggleButton"
									Value="{DynamicResource AccentBrushKey}" />
							<Setter Property="Foreground"
									TargetName="toggleButton"
									Value="{DynamicResource AccentForegroundBrushKey}" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter TargetName="border"
									Property="BorderBrush"
									Value="{DynamicResource InactiveBorderBrushKey}" />
							<Setter TargetName="border"
									Property="Background"
									Value="{DynamicResource InactiveBackgroundBrushKey}" />
							<Setter TargetName="PART_EditableTextBox"
									Property="Foreground"
									Value="{DynamicResource InactiveForegroundBrushKey}" />
							<Setter TargetName="promptText"
									Property="Foreground"
									Value="Transparent" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>