<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Style TargetType="{x:Type RadioButton}">
		<Setter Property="OverridesDefaultStyle"
				Value="True" />
		<Setter Property="Background"
				Value="{DynamicResource ActiveBackgroundBrushKey}" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource ActiveBorderBrushKey}" />
		<Setter Property="Foreground"
				Value="{DynamicResource ActiveForegroundBrushKey}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="4,1,0,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Grid x:Name="templateRoot"
						  Background="Transparent"
						  SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Border x:Name="radioButtonBorder"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								CornerRadius="100"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="1,1,2,1"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Grid x:Name="markGrid"
								  Margin="3">
								<Ellipse x:Name="optionMark"
										 MinWidth="5"
										 MinHeight="5"
										 Opacity="0"
										 Fill="{DynamicResource ForegroundBrushKey}" />
							</Grid>
						</Border>
						<ContentPresenter x:Name="contentPresenter"
										  Grid.Column="1"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentStringFormat="{TemplateBinding ContentStringFormat}"
										  Focusable="False"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Margin="{TemplateBinding Padding}"
										  RecognizesAccessKey="True"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent"
								 Value="True">
							<Setter Property="FocusVisualStyle"
									Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
							<Setter Property="Padding"
									Value="4,-1,0,0" />
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter Property="BorderBrush"
									TargetName="radioButtonBorder"
									Value="{DynamicResource AccentBrushKey}" />
							<Setter Property="Fill"
									TargetName="optionMark"
									Value="{DynamicResource ActiveForegroundBrushKey}" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter Property="BorderBrush"
									TargetName="radioButtonBorder"
									Value="{DynamicResource InactiveBorderBrushKey}" />
							<Setter Property="Background"
									TargetName="radioButtonBorder"
									Value="Transparent" />
							<Setter Property="Fill"
									TargetName="optionMark"
									Value="{DynamicResource InactiveForegroundBrushKey}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="True">
							<Setter Property="Background"
									TargetName="radioButtonBorder"
									Value="{DynamicResource AccentBrushKey}" />
							<Setter Property="BorderBrush"
									TargetName="radioButtonBorder"
									Value="{DynamicResource AccentBrushKey}" />
							<Setter Property="Fill"
									TargetName="optionMark"
									Value="{DynamicResource ActiveForegroundBrushKey}" />
						</Trigger>
						<Trigger Property="IsChecked"
								 Value="True">
							<Setter Property="Opacity"
									TargetName="optionMark"
									Value="1" />
						</Trigger>
						<Trigger Property="GroupName"
								 Value="" />
						<Trigger Property="IsChecked"
								 Value="{x:Null}">
							<Setter Property="Opacity"
									TargetName="optionMark"
									Value="0.56" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>