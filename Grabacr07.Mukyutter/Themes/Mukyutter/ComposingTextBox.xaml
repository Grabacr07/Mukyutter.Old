<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
					xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
					xmlns:controls="clr-namespace:Grabacr07.Mukyutter.Views.Controls"
					xmlns:composing="clr-namespace:Grabacr07.Mukyutter.Views.Composing"
					xmlns:vm="clr-namespace:Grabacr07.Mukyutter.ViewModels.Composing">

	<Style TargetType="{x:Type composing:ComposingTextBox}">
		<Setter Property="Background"
				Value="{DynamicResource SemiactiveBackgroundBrushKey}" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource SemiactiveBorderBrushKey}" />
		<Setter Property="Foreground"
				Value="{DynamicResource ActiveForegroundBrushKey}" />
		<Setter Property="PromptBrush"
				Value="{DynamicResource InactiveForegroundBrushKey}" />
		<Setter Property="BorderThickness"
				Value="1,1,1,1" />
		<Setter Property="Padding"
				Value="2,1,0,1" />
		<Setter Property="Text"
				Value="" />
		<Setter Property="Prompt"
				Value="プロンプト" />
		<Setter Property="TextOptions.TextFormattingMode"
				Value="Display" />
		<Setter Property="VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="FocusVisualStyle"
				Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type composing:ComposingTextBox}">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid Grid.Column="0"
								  Margin="{TemplateBinding Padding}">
								<Border Margin="2"
										x:Name="promptText"
										Visibility="Hidden"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
									<TextBlock Text="{TemplateBinding Prompt}"
											   Foreground="{TemplateBinding PromptBrush}"
											   Margin="{TemplateBinding Padding}"
											   TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" />
								</Border>
								<ScrollViewer x:Name="PART_ContentHost"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
											  Margin="{TemplateBinding Padding}" />
							</Grid>

							<ItemsControl Grid.Column="1"
										  ItemsSource="{TemplateBinding MediaThumbs}"
										  Margin="0,1"
										  VerticalAlignment="Top"
										  IsTabStop="False"
										  Focusable="False"
										  HorizontalAlignment="Right">
								<ItemsControl.Template>
									<ControlTemplate TargetType="{x:Type ItemsControl}">
										<WrapPanel IsItemsHost="True" />
									</ControlTemplate>
								</ItemsControl.Template>
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="{x:Type vm:MediaViewModel}">
										<Button Width="{Binding MediaThumbWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type composing:ComposingTextBox}}}"
												Margin="2,1"
												Focusable="False"
												IsTabStop="False"
												FocusVisualStyle="{x:Null}">
											<i:Interaction.Triggers>
												<i:EventTrigger EventName="Click">
													<livet:LivetCallMethodAction MethodTarget="{Binding Mode=OneWay}"
																				 MethodName="Delete" />
												</i:EventTrigger>
											</i:Interaction.Triggers>
											<Button.Template>
												<ControlTemplate TargetType="{x:Type Button}">
													<Grid Background="Transparent">
														<Image Source="{Binding Thumb}" />
														<Rectangle x:Name="rectangle"
																   Visibility="Hidden"
																   Opacity="0.3" />
														<TextBlock x:Name="cross"
																   Text="r"
																   FontFamily="Marlett"
																   FontSize="18"
																   Foreground="{DynamicResource ForegroundBrushKey}"
																   HorizontalAlignment="Right"
																   VerticalAlignment="Top"
																   Visibility="Hidden"
																   Margin="2" />
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver"
																 Value="True">
															<Setter Property="Foreground"
																	TargetName="cross"
																	Value="{DynamicResource ActiveForegroundBrushKey}" />
															<Setter Property="Fill"
																	TargetName="rectangle"
																	Value="{DynamicResource BackgroundBrushKey}" />
															<Setter Property="Visibility"
																	TargetName="rectangle"
																	Value="Visible" />
															<Setter Property="Visibility"
																	TargetName="cross"
																	Value="Visible" />
														</Trigger>
														<Trigger Property="IsPressed"
																 Value="True">
															<Setter Property="Foreground"
																	TargetName="cross"
																	Value="{DynamicResource ActiveForegroundBrushKey}" />
															<Setter Property="Fill"
																	TargetName="rectangle"
																	Value="{DynamicResource AccentActiveBrushKey}" />
															<Setter Property="Visibility"
																	TargetName="rectangle"
																	Value="Visible" />
															<Setter Property="Visibility"
																	TargetName="cross"
																	Value="Visible" />
															<Setter Property="Opacity"
																	TargetName="rectangle"
																	Value="0.4" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Button.Template>
										</Button>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>

							<Grid Grid.Column="2">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Button Height="25"
										Style="{DynamicResource XButtonStyleKey}"
										Focusable="False"
										IsTabStop="False">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<livet:LivetCallMethodAction MethodTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type composing:ComposingTextBox}}}"
																		 MethodName="RequestClearing" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
								</Button>
								<Grid Grid.Row="2"
									  Margin="5,0">
									<TextBlock Text="140"
											   Margin="0,2"
											   FontWeight="Bold"
											   Foreground="{x:Null}"
											   HorizontalAlignment="Center" />
									<TextBlock Text="{TemplateBinding RemainingCharactersNum}"
											   Margin="0,2"
											   FontWeight="Bold"
											   HorizontalAlignment="Center"
											   Foreground="{TemplateBinding PromptBrush}" />
								</Grid>
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocusWithin"
										   Value="False" />
								<Condition Property="Text"
										   Value="" />
							</MultiTrigger.Conditions>
							<Setter TargetName="promptText"
									Property="Visibility"
									Value="Visible" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Background"
						Value="{DynamicResource ActiveBackgroundBrushKey}" />
				<Setter Property="BorderBrush"
						Value="{DynamicResource ActiveBorderBrushKey}" />
				<Setter Property="PromptBrush"
						Value="{DynamicResource ForegroundBrushKey}" />
			</Trigger>

			<Trigger Property="IsKeyboardFocusWithin"
					 Value="True">
				<Setter Property="Background"
						Value="{DynamicResource ActiveBackgroundBrushKey}" />
				<Setter Property="BorderBrush"
						Value="{DynamicResource ActiveBorderBrushKey}" />
				<Setter Property="PromptBrush"
						Value="{DynamicResource ForegroundBrushKey}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>