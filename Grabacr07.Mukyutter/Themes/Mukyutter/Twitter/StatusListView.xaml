<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
					xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
					xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
					xmlns:controls="clr-namespace:Grabacr07.Mukyutter.Views.Controls"
					xmlns:converters="clr-namespace:Grabacr07.Mukyutter.Views.Converters"
					xmlns:twitter="clr-namespace:Grabacr07.Mukyutter.Views.Twitter"
					xmlns:primitives="clr-namespace:Grabacr07.Mukyutter.Views.Twitter.Primitives"
					xmlns:twitterVm="clr-namespace:Grabacr07.Mukyutter.ViewModels.Twitter"
					xmlns:sampleData="clr-namespace:Grabacr07.Mukyutter.SampleData"
					mc:Ignorable="d">

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	<converters:UniversalBooleanToVisibilityConverter x:Key="UniversalBooleanToVisibilityConverter" />
	<DataTemplate x:Key="StatusListLargeItemTemplateKey"
				  DataType="{x:Type twitterVm:StatusViewModel}">
		<DataTemplate.Resources>
			<ResourceDictionary>
				<Style x:Key="SubTextStyleKey"
					   TargetType="{x:Type TextBlock}">
					<Setter Property="Foreground"
							Value="{DynamicResource ForegroundBrushKey}" />
					<Setter Property="FontSize"
							Value="11" />
				</Style>
				<Storyboard x:Key="OpenPopup" />
			</ResourceDictionary>
		</DataTemplate.Resources>

		<Border Background="Transparent"
				Padding="0,3">
			<d:DataContext>
				<sampleData:SampleStatusViewModel />
			</d:DataContext>

			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="32" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<StackPanel Grid.ColumnSpan="2"
							Margin="0,3"
							HorizontalAlignment="Left"
							Panel.ZIndex="1">
					<primitives:QuickStatusController Image="{Binding DisplayStatus.User.Icon.Image, Mode=OneWay}"
													  ImageSize="32"
													  DataContext="{Binding DisplayStatus, Mode=OneWay}" />
					<Image Source="{Binding User.Icon.Image, Mode=OneWay}"
						   Width="20"
						   Height="20"
						   Margin="12,1,0,0"
						   HorizontalAlignment="Left"
						   Visibility="{Binding IsRetweet, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />
				</StackPanel>

				<StackPanel Grid.Column="1">
					<Grid Margin="6,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="5" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<controls:LinkButton Grid.Column="2"
											 Text="{Binding DisplayStatus.AbsoluteShortDateTime, Mode=OneWay}"
											 FontSize="11"
											 Foreground="{DynamicResource SemiActiveForegroundBrushKey}"
											 VerticalAlignment="Bottom"
											 Margin="0,0,0,1">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Click">
									<ei:CallMethodAction TargetObject="{Binding DisplayStatus}"
														 MethodName="OpenStatusPage" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</controls:LinkButton>

						<StackPanel Orientation="Horizontal">
							<twitter:TwitterIcon Type="PadLock"
												 Margin="0,0,5,1"
												 Visibility="{Binding DisplayStatus.User.Protected, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
												 VerticalAlignment="Bottom" />
							<controls:LinkButton Text="{Binding DisplayStatus.User.Name, Mode=OneWay}"
												 FontSize="13.333"
												 Margin="0,0,5,0"
												 VerticalAlignment="Bottom"
												 Foreground="{DynamicResource ForegroundBrushKey}"
												 FontWeight="Bold" />
							<controls:LinkButton Text="{Binding DisplayStatus.User.ScreenNameWithAtmark, Mode=OneWay}"
												 TextTrimming="CharacterEllipsis"
												 Foreground="{DynamicResource SemiActiveForegroundBrushKey}"
												 VerticalAlignment="Bottom">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ei:CallMethodAction TargetObject="{Binding DisplayStatus.User}"
															 MethodName="OpenUserPage" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</controls:LinkButton>
						</StackPanel>
					</Grid>

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<controls:RichTextView Margin="6,4,6,0"
											   Source="{Binding DisplayStatus.RichText}"
											   HorizontalAlignment="Left">
							<!-- #region DataTemplates -->
							<DataTemplate DataType="{x:Type controls:Regular}">
								<controls:RichTextInlinePresenter>
									<Run Foreground="{DynamicResource ActiveForegroundBrushKey}"
										 FontFamily="Meiryo UI"
										 Text="{Binding Text}"
										 FontSize="12" />
								</controls:RichTextInlinePresenter>
							</DataTemplate>
							<DataTemplate DataType="{x:Type controls:Url}">
								<controls:RichTextInlinePresenter>
									<Hyperlink Cursor="Hand"
											   Foreground="{DynamicResource LinkForegroundBrushKey}"
											   FontFamily="Meiryo UI"
											   FontSize="12">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="MouseLeftButtonDown">
												<ei:CallMethodAction MethodName="Click"
																	 TargetObject="{Binding}" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
										<Run Text="{Binding Text}" />
									</Hyperlink>
								</controls:RichTextInlinePresenter>
							</DataTemplate>
							<DataTemplate DataType="{x:Type controls:Mention}">
								<controls:RichTextInlinePresenter>
									<Hyperlink Cursor="Hand"
											   Foreground="{DynamicResource LinkForegroundBrushKey}"
											   FontFamily="Meiryo UI"
											   FontSize="12">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="MouseLeftButtonDown">
												<ei:CallMethodAction MethodName="Click"
																	 TargetObject="{Binding}" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
										<Run Text="{Binding Text}" />
									</Hyperlink>
								</controls:RichTextInlinePresenter>
							</DataTemplate>
							<DataTemplate DataType="{x:Type controls:Hashtag}">
								<controls:RichTextInlinePresenter>
									<Hyperlink Cursor="Hand"
											   Foreground="{DynamicResource LinkForegroundBrushKey}"
											   FontFamily="Meiryo UI"
											   FontSize="12">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="MouseLeftButtonDown">
												<ei:CallMethodAction MethodName="Click"
																	 TargetObject="{Binding}" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
										<Run Text="{Binding Text}" />
									</Hyperlink>
								</controls:RichTextInlinePresenter>
							</DataTemplate>
							<!-- #rendegion -->
						</controls:RichTextView>
					</Grid>

					<Grid Margin="6,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="5" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<Grid Visibility="{Binding IsRetweet, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
							  Margin="0,2">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Rectangle Height="1"
									   Fill="Gray"
									   Margin="0,2"
									   Width="{Binding ActualWidth, ElementName=retweetedLabel, Mode=OneWay}"
									   HorizontalAlignment="Left" />
							<StackPanel x:Name="retweetedLabel"
										Grid.Row="1"
										Orientation="Horizontal"
										Visibility="{Binding IsRetweet, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
										HorizontalAlignment="Left"
										VerticalAlignment="Top">
								<twitter:TwitterIcon Type="Retweet"
													 VerticalAlignment="Center"
													 Margin="0,1,3,0"
													 Visibility="Collapsed" />
								<TextBlock Text="Retweeted by "
										   Style="{DynamicResource SubTextStyleKey}"
										   VerticalAlignment="Center"
										   Foreground="{DynamicResource SemiActiveForegroundBrushKey}" />
								<controls:LinkButton Text="{Binding User.Name, Mode=OneWay}"
													 FontSize="11"
													 HorizontalAlignment="Left"
													 VerticalAlignment="Center"
													 Foreground="{DynamicResource ForegroundBrushKey}" />
							</StackPanel>
						</Grid>
					</Grid>

				</StackPanel>
			</Grid>
		</Border>
	</DataTemplate>

	<Style TargetType="{x:Type twitter:StatusListView}">
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="ItemContainerStyle"
				Value="{DynamicResource TimelineViewItemContainerStyleKey}" />
		<Setter Property="ItemTemplate"
				Value="{DynamicResource StatusListLargeItemTemplateKey}" />
		<Setter Property="AlternationCount"
				Value="2" />
		<Setter Property="ScrollViewer.CanContentScroll"
				Value="True" />
		<Setter Property="ScrollViewer.PanningMode"
				Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="True" />
		<Setter Property="VirtualizingPanel.IsVirtualizing"
				Value="True" />
		<Setter Property="VirtualizingPanel.ScrollUnit"
				Value="Pixel" />
		<Setter Property="VirtualizingPanel.VirtualizationMode"
				Value="Standard" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type twitter:StatusListView}">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<ScrollViewer Focusable="False">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel>
						<i:Interaction.Behaviors>
							<ei:FluidMoveBehavior AppliesTo="Children"
												  Duration="0:0:0.2">
								<ei:FluidMoveBehavior.EaseY>
									<QuarticEase EasingMode="EaseOut" />
								</ei:FluidMoveBehavior.EaseY>
							</ei:FluidMoveBehavior>
						</i:Interaction.Behaviors>
					</VirtualizingStackPanel>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="TimelineViewItemContainerStyleKey"
		   TargetType="{x:Type ListBoxItem}">
		<Setter Property="OverridesDefaultStyle"
				Value="True" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderBrush"
				Value="Transparent" />
		<Setter Property="TextOptions.TextFormattingMode"
				Value="Display" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Grid>
							<Border Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="0,0,0,1" />
							<Border x:Name="decorator"
									Background="Transparent"
									BorderBrush="Transparent"
									BorderThickness="0,0,0,1"
									Opacity="0.25" />
							<ContentPresenter x:Name="content" />
							<Border x:Name="strikeThrough"
									Height="6"
									VerticalAlignment="Center"
									Opacity="0.5"
									BorderThickness="0,1"
									Visibility="Collapsed"
									BorderBrush="{DynamicResource ActiveForegroundBrushKey}"
									Background="#00000000" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<!--						<Trigger Property="ItemsControl.AlternationIndex"-->
						<!--								 Value="0">-->
						<!--							<Setter TargetName="decorator"-->
						<!--									Property="Background"-->
						<!--									Value="#10808080" />-->
						<!--							<Setter TargetName="decorator"-->
						<!--									Property="BorderBrush"-->
						<!--									Value="#10808080" />-->
						<!--						</Trigger>-->
						<DataTrigger Binding="{Binding IsMention}"
									 Value="True">
							<Setter TargetName="decorator"
									Property="Background"
									Value="{DynamicResource MentionTweetBackgroundBrushKey}" />
						</DataTrigger>
						<DataTrigger Binding="{Binding IsRetweet}"
									 Value="True">
							<Setter TargetName="decorator"
									Property="Background"
									Value="{DynamicResource RetweetBackgroundBrushKey}" />
						</DataTrigger>
						<DataTrigger Binding="{Binding IsSelf}"
									 Value="True">
							<Setter TargetName="decorator"
									Property="Background"
									Value="{DynamicResource SelfTweetBackgroundBrushKey}" />
						</DataTrigger>
						<DataTrigger Binding="{Binding IsDeleted}">
							<Setter TargetName="strikeThrough"
									Property="Visibility"
									Value="Visible" />
							<Setter TargetName="content"
									Property="Opacity"
									Value="0.75" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Border BorderThickness="0,1"
										BorderBrush="{DynamicResource AccentHighlightBrushKey}"
										SnapsToDevicePixels="true" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Background"
						Value="{DynamicResource SemiactiveBackgroundBrushKey}" />
			</Trigger>
			<Trigger Property="IsSelected"
					 Value="True">
				<Setter Property="Background"
						Value="{DynamicResource SemiactiveBackgroundBrushKey}" />
			</Trigger>
		</Style.Triggers>
	</Style>


	<Style TargetType="{x:Type primitives:QuickStatusController}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type primitives:QuickStatusController}">
					<ControlTemplate.Resources>
						<Style TargetType="{x:Type Button}">
							<Setter Property="SnapsToDevicePixels"
									Value="True" />
							<Setter Property="ToolTipService.Placement"
									Value="Bottom" />
							<Setter Property="FocusVisualStyle"
									Value="{x:Null}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											  Width="{Binding ImageSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type primitives:QuickStatusController}}}"
											  Height="{Binding ImageSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type primitives:QuickStatusController}}}">
											<Border x:Name="border"
													Background="{DynamicResource ActiveBackgroundBrushKey}"
													Opacity="0.95" />
											<ContentPresenter x:Name="contentPresenter"
															  HorizontalAlignment="Center"
															  VerticalAlignment="Center" />
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Background"
														TargetName="border"
														Value="{DynamicResource AccentHighlightBrushKey}" />
											</Trigger>
											<Trigger Property="IsPressed"
													 Value="True">
												<Setter Property="Background"
														TargetName="border"
														Value="{DynamicResource AccentActiveBrushKey}" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ControlTemplate.Resources>
					<Grid Background="Transparent">
						<Image Source="{TemplateBinding Image}"
							   Width="{TemplateBinding ImageSize}"
							   Height="{TemplateBinding ImageSize}"
							   HorizontalAlignment="Left" />
						<StackPanel x:Name="controllers"
									Orientation="Horizontal"
									Visibility="Collapsed">
							<Button ToolTip="このツイートに返信">
								<Path Style="{DynamicResource ReplyIconKey}"
									  Fill="{DynamicResource AccentForegroundBrushKey}"
									  Height="16" />
								<Button.Template>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											  Width="{Binding ImageSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type primitives:QuickStatusController}}}"
											  Height="{Binding ImageSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type primitives:QuickStatusController}}}">
											<Border x:Name="border"
													Background="{DynamicResource ActiveBackgroundBrushKey}"
													Opacity="0.7" />
											<ContentPresenter x:Name="contentPresenter"
															  HorizontalAlignment="Center"
															  VerticalAlignment="Center" />
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Background"
														TargetName="border"
														Value="{DynamicResource AccentHighlightBrushKey}" />
											</Trigger>
											<Trigger Property="IsPressed"
													 Value="True">
												<Setter Property="Background"
														TargetName="border"
														Value="{DynamicResource AccentActiveBrushKey}" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Button.Template>
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ei:CallMethodAction TargetObject="{Binding}"
															 MethodName="Reply" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>

							<Button ToolTip="お気に入りに登録"
									Visibility="{Binding CanFavorite, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
								<twitter:TwitterIcon Type="Favorite" />
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ei:CallMethodAction TargetObject="{Binding}"
															 MethodName="Favorite" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>

							<Button ToolTip="リツイート"
									Visibility="{Binding CanRetweet, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
								<twitter:TwitterIcon Type="Retweet" />
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ei:CallMethodAction TargetObject="{Binding}"
															 MethodName="Retweet" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>

							<Button ToolTip="お気に入りに登録してリツイート"
									Visibility="{Binding CanFavAndRetweet, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
								<twitter:TwitterIcon Type="FavAndRetweet" />
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ei:CallMethodAction TargetObject="{Binding}"
															 MethodName="Favorite" />
										<ei:CallMethodAction TargetObject="{Binding}"
															 MethodName="Retweet" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>
						</StackPanel>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter TargetName="controllers"
									Property="Visibility"
									Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>