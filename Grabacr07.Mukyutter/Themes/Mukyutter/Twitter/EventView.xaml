<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
					xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:controls="clr-namespace:Grabacr07.Mukyutter.Views.Controls"
					xmlns:twitter="clr-namespace:Grabacr07.Mukyutter.Views.Twitter"
					xmlns:event="clr-namespace:Grabacr07.Mukyutter.Views.Twitter.Events"
					xmlns:eventVm="clr-namespace:Grabacr07.Mukyutter.ViewModels.Twitter.Events">

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<Style x:Key="LeftArrowKey"
		   TargetType="{x:Type Path}">
		<Setter Property="Width"
				Value="13" />
		<Setter Property="Height"
				Value="13" />
		<Setter Property="Data"
				Value="M0,0 L0,10 7.5,5 z" />
		<Setter Property="Stretch"
				Value="Uniform" />
		<Setter Property="Fill"
				Value="{DynamicResource InactiveForegroundBrushKey}" />
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="Margin"
				Value="3,0" />
	</Style>

	<Style x:Key="EventViewTextElementKey"
		   TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground"
				Value="{DynamicResource ActiveForegroundBrushKey}" />
		<Setter Property="Margin"
				Value="4,4,6,4" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="TextTrimming"
				Value="CharacterEllipsis" />
		<Setter Property="TextOptions.TextFormattingMode"
				Value="Display" />
	</Style>

	<Style x:Key="EventViewTimeTextElementKey"
		   TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground"
				Value="{DynamicResource ForegroundBrushKey}" />
		<Setter Property="FontSize"
				Value="11" />
		<Setter Property="Margin"
				Value="5,4,10,4" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="TextTrimming"
				Value="CharacterEllipsis" />
		<Setter Property="TextOptions.TextFormattingMode"
				Value="Display" />
	</Style>

	<Style x:Key="EventViewUserIconStyleKey"
		   TargetType="{x:Type Image}">
		<Setter Property="Width"
				Value="24" />
		<Setter Property="Height"
				Value="24" />
	</Style>

	<Style x:Key="EventIconStyleKey"
		   TargetType="{x:Type twitter:TwitterIcon}">
		<Setter Property="Margin"
				Value="5,0,0,0" />
	</Style>


	<Style x:Key="EventViewStyleKey"
		   TargetType="{x:Type ListView}">
		<Setter Property="OverridesDefaultStyle"
				Value="True" />
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="AlternationCount"
				Value="2" />
		<Setter Property="ScrollViewer.CanContentScroll"
				Value="True" />
		<Setter Property="ScrollViewer.PanningMode"
				Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="False" />
		<Setter Property="VirtualizingPanel.IsVirtualizing"
				Value="True" />
		<Setter Property="VirtualizingPanel.ScrollUnit"
				Value="Pixel" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}" />
		<Setter Property="ItemContainerStyle"
				Value="{DynamicResource ErrorViewItemContainerStyleKey}" />
		<Setter Property="ItemTemplateSelector">
			<Setter.Value>
				<event:EventDataTemplateSelector />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									  Focusable="False"
									  Grid.IsSharedSizeScope="True">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel IsItemsHost="True" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="EventViewItemContainerStyleKey"
		   TargetType="{x:Type ListBoxItem}">
		<Setter Property="OverridesDefaultStyle"
				Value="True" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderBrush"
				Value="Transparent" />
		<Setter Property="BorderThickness"
				Value="0,1" />
		<Setter Property="Padding"
				Value="1" />
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="TextOptions.TextFormattingMode"
				Value="Display" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Grid>
							<Border x:Name="alternationDecorator"
									Background="Transparent"
									BorderBrush="Transparent"
									BorderThickness="{TemplateBinding BorderThickness}" />
							<Border Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}" />
							<ContentPresenter Margin="{TemplateBinding Padding}" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.AlternationIndex"
								 Value="0">
							<Setter TargetName="alternationDecorator"
									Property="Background"
									Value="#10808080" />
							<Setter TargetName="alternationDecorator"
									Property="BorderBrush"
									Value="#10808080" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}" />
	</Style>


	<DataTemplate x:Key="FavoriteTemplateKey"
				  DataType="{x:Type eventVm:FavoriteViewModel}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<StackPanel Orientation="Horizontal">
				<Grid MinWidth="88">
					<Border Background="{DynamicResource StarBrushKey}"
							Opacity="0.1" />
					<StackPanel Orientation="Horizontal">
						<twitter:TwitterIcon Type="Favorite"
											 Style="{DynamicResource EventIconStyleKey}" />
						<TextBlock Grid.Column="1"
								   Text="Favorite"
								   Style="{DynamicResource EventViewTextElementKey}" />
					</StackPanel>
				</Grid>
				<Image Source="{Binding Source.Icon.Image, Mode=OneWay}"
					   Style="{DynamicResource EventViewUserIconStyleKey}" />
				<TextBlock Text="{Binding Source.ScreenNameWithAtmark, Mode=OneWay}"
						   Style="{DynamicResource EventViewTextElementKey}" />
				<Path Style="{DynamicResource LeftArrowKey}" />
			</StackPanel>
			<TextBlock Grid.Column="1"
					   Text="{Binding Text, Mode=OneWay}"
					   Style="{DynamicResource EventViewTextElementKey}"
					   ToolTip="{Binding Text, Mode=OneWay}"
					   ToolTipService.Placement="Relative"
					   ToolTipService.HorizontalOffset="-7"
					   ToolTipService.VerticalOffset="-5" />
			<TextBlock Grid.Column="2"
					   Text="{Binding CreatedAt, Mode=OneWay}"
					   Style="{DynamicResource EventViewTimeTextElementKey}" />
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="UnfavoriteTemplateKey"
				  DataType="{x:Type eventVm:UnfavoriteViewModel}">

	</DataTemplate>

	<DataTemplate x:Key="RetweetTemplateKey"
				  DataType="{x:Type eventVm:RetweetViewModel}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<StackPanel Orientation="Horizontal">
				<Grid MinWidth="88">
					<Border Background="{DynamicResource RetweetBrushKey}"
							Opacity="0.1" />
					<StackPanel Orientation="Horizontal">
						<twitter:TwitterIcon Type="Retweet"
											 Style="{DynamicResource EventIconStyleKey}" />
						<TextBlock Grid.Column="1"
								   Text="Retweet"
								   Style="{DynamicResource EventViewTextElementKey}" />
					</StackPanel>
				</Grid>
				<Image Source="{Binding Source.Icon.Image, Mode=OneWay}"
					   Style="{DynamicResource EventViewUserIconStyleKey}" />
				<TextBlock Text="{Binding Source.ScreenNameWithAtmark, Mode=OneWay}"
						   Style="{DynamicResource EventViewTextElementKey}" />
				<Path Style="{DynamicResource LeftArrowKey}" />
			</StackPanel>
			<TextBlock Grid.Column="1"
					   Text="{Binding Text, Mode=OneWay}"
					   Style="{DynamicResource EventViewTextElementKey}"
					   ToolTip="{Binding Text, Mode=OneWay}"
					   ToolTipService.Placement="Relative"
					   ToolTipService.HorizontalOffset="-7"
					   ToolTipService.VerticalOffset="-5" />
			<TextBlock Grid.Column="2"
					   Text="{Binding CreatedAt, Mode=OneWay}"
					   Style="{DynamicResource EventViewTimeTextElementKey}" />
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="FollowTemplateKey"
				  DataType="{x:Type eventVm:FollowViewModel}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<StackPanel Orientation="Horizontal">
				<Grid MinWidth="88">
					<Border Background="{DynamicResource TwitterBrushKey}"
							Opacity="0.1" />
					<StackPanel Orientation="Horizontal">
						<twitter:TwitterIcon Type="TwitterBird"
											 Style="{DynamicResource EventIconStyleKey}" />
						<TextBlock Grid.Column="1"
								   Text="Follow"
								   Style="{DynamicResource EventViewTextElementKey}" />
					</StackPanel>
				</Grid>
				<Image Source="{Binding Source.Icon.Image, Mode=OneWay}"
					   Style="{DynamicResource EventViewUserIconStyleKey}" />
				<TextBlock Text="{Binding Source.ScreenNameWithAtmark, Mode=OneWay}"
						   Style="{DynamicResource EventViewTextElementKey}" />
				<Path Style="{DynamicResource LeftArrowKey}" />
				<Image Source="{Binding Target.Icon.Image, Mode=OneWay}"
					   Style="{DynamicResource EventViewUserIconStyleKey}" />
				<TextBlock Text="{Binding Target.ScreenNameWithAtmark, Mode=OneWay}"
						   Style="{DynamicResource EventViewTextElementKey}" />
			</StackPanel>
			<TextBlock Grid.Column="2"
					   Text="{Binding CreatedAt, Mode=OneWay}"
					   Style="{DynamicResource EventViewTimeTextElementKey}" />
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="MentionTemplateKey"
				  DataType="{x:Type eventVm:MentionViewModel}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<StackPanel Orientation="Horizontal">
				<Grid MinWidth="88">
					<Border Background="{DynamicResource ReplyBrushKey}"
							Opacity="0.1" />
					<StackPanel Orientation="Horizontal">
						<twitter:TwitterIcon Type="Reply"
											 Style="{DynamicResource EventIconStyleKey}" />
						<TextBlock Grid.Column="1"
								   Text="Mention"
								   Style="{DynamicResource EventViewTextElementKey}" />
					</StackPanel>
				</Grid>
				<Image Source="{Binding Source.Icon.Image, Mode=OneWay}"
					   Style="{DynamicResource EventViewUserIconStyleKey}" />
				<TextBlock Text="{Binding Source.ScreenNameWithAtmark, Mode=OneWay}"
						   Style="{DynamicResource EventViewTextElementKey}" />
				<Path Style="{DynamicResource LeftArrowKey}" />
			</StackPanel>
			<TextBlock Grid.Column="1"
					   Text="{Binding Text, Mode=OneWay}"
					   Style="{DynamicResource EventViewTextElementKey}"
					   ToolTip="{Binding Text, Mode=OneWay}"
					   ToolTipService.Placement="Relative"
					   ToolTipService.HorizontalOffset="-7"
					   ToolTipService.VerticalOffset="-5" />
			<TextBlock Grid.Column="2"
					   Text="{Binding CreatedAt, Mode=OneWay}"
					   Style="{DynamicResource EventViewTimeTextElementKey}" />
		</Grid>
	</DataTemplate>

</ResourceDictionary>